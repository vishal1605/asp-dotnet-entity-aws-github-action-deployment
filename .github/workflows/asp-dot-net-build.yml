name: asp-dot-net-entity-framwork-aws-github-build

on:
  push:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: pass@123
          POSTGRES_DB: entity
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.400'  # Change this to match your .NET SDK version

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore

      - name: Install EF Core CLI
        run: dotnet tool install --global dotnet-ef

      - name: Add EF tools to PATH
        run: echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

      - name: Show working directory and contents
        run: |
          echo "Current directory:"
          pwd
          echo "Contents:"
          ls -la

      - name: Run EF Core migrations (optional)
        run: |
          pwd
          dotnet ef database update --project entity-framework-aws-deployment/
        env:
          ASPNETCORE_ENVIRONMENT: Development
          ConnectionStrings__DefaultConnection: ${{ secrets.DEFAULT_CONNECTION }}

      - name: Run tests (if you have any)
        run: dotnet test --no-build --verbosity normal


  deploy:
    needs: build
    runs-on: self-hosted
    if: success()

    steps:
      - name: Stop current app and clean old files
        run: |
          sudo systemctl stop dotnet-app.service
          cd ~/dot-net-mvc-app
          ls
          sudo rm -rf *

      - name: Get the code in remote server
        uses: actions/checkout@v3

      - name: pwd
        run: |
          echo "Current directory:"
          pwd
          echo "Contents:"
          ls -la
          dotnet publish -c Release -o /home/ubuntu/dot-net-mvc-app
          ls
          sudo systemctl daemon-reload
          sudo systemctl start dotnet-app.service

